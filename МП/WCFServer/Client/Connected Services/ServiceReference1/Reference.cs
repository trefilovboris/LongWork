//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICommand", CallbackContract=typeof(Client.ServiceReference1.ICommandCallback))]
    public interface ICommand {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommand/Execute", ReplyAction="http://tempuri.org/ICommand/ExecuteResponse")]
        WCFServer.CommandResult Execute(WCFServer.CommandResult command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommand/Execute", ReplyAction="http://tempuri.org/ICommand/ExecuteResponse")]
        System.Threading.Tasks.Task<WCFServer.CommandResult> ExecuteAsync(WCFServer.CommandResult command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommand/Callback")]
        void Callback(string message, byte[] data, int codeCommand);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandChannel : Client.ServiceReference1.ICommand, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandClient : System.ServiceModel.DuplexClientBase<Client.ServiceReference1.ICommand>, Client.ServiceReference1.ICommand {
        
        public CommandClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CommandClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CommandClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommandClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommandClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public WCFServer.CommandResult Execute(WCFServer.CommandResult command) {
            return base.Channel.Execute(command);
        }
        
        public System.Threading.Tasks.Task<WCFServer.CommandResult> ExecuteAsync(WCFServer.CommandResult command) {
            return base.Channel.ExecuteAsync(command);
        }
    }
}
